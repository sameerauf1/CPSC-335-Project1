def myhamilton(city_distances, fuel_at_gas_station, car_mpg):
    let number_of_cities = len(city_distances)
    initialize best_city_index to 0
    for round_trip_starting_destination in city_distances 
        fuel_left_over = 0
        for city in range(round_trip_starting_destination , round_trip_starting_destination + number_of_cities)
            if city > len(city_distances-1):
                city = city % len(city_distances)
            calculate gallons_filled_at_gas_station by accessing fuel_at_gas_station list
            calculate total_gallons_in_tank by adding fuel_at_gas_station + fuel_left_over
            calculate gallons_required_to_travel_distance by dividing city_distances by car_mpg
            calculate fuel_left_over by subtracting total_gallons_in_tank by gallons_required_to_travel_distance
            if fuel_left_over >=0 and  city == round_trip_starting_destination + number_of_cities:
                if city == 0 and round_trip_starting_destination == 0(EDGE CASE)
                    skip iteration
                bestCity = round_trip_starting_destination
            if fuel_left_over < 0:
                break out of round trip loop and move onto next round_trip_starting_destination
    return bestCity
